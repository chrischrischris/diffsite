input,
select {
  font-size: 1rem;
  padding: 0.75em 0.75em 0.75em 0;
  border: 1px solid var(--color);
  border-width: 0 0 1px;
  background: transparent;
  color: var(--color);
  font-family: $font-stack;
  transition: color $transition-duration, background-color $transition-duration, border-color $transition-duration;

  &:focus {
    color: var(--primary);
  }
}

label {
  font-weight: 700;
  font-size: 0.8rem;
}

.label-group {
  display: flex;
  flex-flow: column-reverse nowrap;
  margin: 1.25rem 1rem;

  label {
    margin-top: 0.2em;
  }
}

.disabled {
  opacity: 0.4;
  pointer-events: none;
  transition: opacity $transition-duration;

  * {
    user-select: none;
  }
}

// toggle
.toggle {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: stretch;
  margin: 0;
  font-size: 0;

  input {
    width: 0;
    height: 0;
    position: absolute;
    left: -9999px;

    & + label {
      margin: 0;
      padding: 0.5rem 1rem;
      position: relative;
      display: inline-block;
      border: solid 1px var(--shade2);
      background-color: var(--shade2);
      font-size: 1rem;
      font-weight: 400;
      text-align: center;
      transition: border-color $transition-duration, color $transition-duration, background-color $transition-duration;

      &:first-of-type {
        border-radius: 0.5rem 0 0 0.5rem;
        border-right: none;
      }

      &:last-of-type {
        border-radius: 0 0.5rem 0.5rem 0;
        border-left: none;
      }
    }

    &:hover + label {
      border-color: var(--shade2);
      color: var(--primary);
      cursor: pointer;
    }

    &:checked + label {
      background-color: var(--primary);
      color: var(--background);
      border-color: var(--primary);
      z-index: 1;
    }
  }
}

// select
select.select {

  &,
  &:active,
  &:hover,
  &:focus {
    -webkit-appearance: none;
    appearance: none;
    margin: 0;
    padding: 0.5rem 2.5rem 0.5rem 1rem;
    position: relative;
    display: inline-block;
    border: solid 1px var(--primary);
    border-radius: 0.5rem;
    background-color: var(--primary);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z' fill='%23f5f5f5'/%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right .7rem top 50%;
    color: var(--background);
    font-size: 1rem;
    font-weight: 400;
    text-align: center;
    transition: border-color $transition-duration, color $transition-duration, background-color $transition-duration;

    @media (prefers-color-scheme: dark) {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z' fill='%23111'/%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3C/svg%3E");
    }
    
    .theme-dark & {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z' fill='%23111'/%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3C/svg%3E");
      
      @media (prefers-color-scheme: dark) {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z' fill='%23f5f5f5'/%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3C/svg%3E");
      }
    }
  }
  
  option {
    font-weight: normal;
  }
}

// icon button
.icon-button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 3.5rem;
  height: 3.5rem;
  padding: 0;
  border: 0;
  background: var(--primary);
  color: var(--background);

  i {
    flex: 1 0 0%;
    font-size: 1.5rem;
    transition: background-color $transition-duration, color $transition-duration;
  }

  &--shade {
    background: var(--shade2);
    color: var(--color);

    &:hover i,
    &:active i {
      color: var(--primary);
    }
  }
}

// link button
.link-button {
  padding: 0.3em 1em;
  border-radius: 1.1em;
  background-color: var(--primary);
  color: var(--background);
  transition: background-color $transition-duration, color $transition-duration;

  &:hover,
  &:active {
    opacity: 1;
  }

  &--shade {
    background: var(--shade2);
    color: var(--color);

    &:hover,
    &:active {
      color: var(--primary);
    }
  }
}

// input range
input[type="range"] {
  height: 28px;
  -webkit-appearance: none;
  margin: 0;
  padding: 0.4rem 0;
  border: 0;
}
input[type="range"]:focus {
  outline: none;
}
input[type="range"]::-webkit-slider-runnable-track {
  width: 100%;
  height: 5px;
  cursor: pointer;
  background: var(--primary);
  border-radius: 1px;
}
input[type="range"]::-webkit-slider-thumb {
  border: 2px solid var(--primary);
  height: 20px;
  width: 20px;
  border-radius: 20px;
  background: var(--background);
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -8.5px;
}
input[type="range"]:focus::-webkit-slider-runnable-track {
  background: var(--primary);
}
input[type="range"]::-moz-range-track {
  width: 100%;
  height: 5px;
  cursor: pointer;
  background: var(--primary);
  border-radius: 1px;
}
input[type="range"]::-moz-range-thumb {
  border: 2px solid var(--primary);
  height: 20px;
  width: 20px;
  border-radius: 20px;
  background: var(--background);
  cursor: pointer;
}
input[type="range"]::-ms-track {
  width: 100%;
  height: 5px;
  cursor: pointer;
  background: transparent;
  border-color: transparent;
  color: transparent;
}
input[type="range"]::-ms-fill-lower {
  background: var(--primary);
  border: 0px solid var(--background);
  border-radius: 2px;
}
input[type="range"]::-ms-fill-upper {
  background: var(--primary);
  border: 0px solid var(--background);
  border-radius: 2px;
}
input[type="range"]::-ms-thumb {
  margin-top: 1px;
  border: 2px solid var(--primary);
  height: 20px;
  width: 20px;
  border-radius: 20px;
  background: var(--background);
  cursor: pointer;
}
input[type="range"]:focus::-ms-fill-lower {
  background: var(--primary);
}
input[type="range"]:focus::-ms-fill-upper {
  background: var(--primary);
}
